<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DorZnakUA.Api</name>
    </assembly>
    <members>
        <member name="T:DorZnakUA.Api.Controller.AuthController">
            <summary>
            Сервіс для реєстрації та входу в систему
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.AuthController.Register(Domain.DorZnakUA.Dto.User.RegisterUserDto)">
            <summary>
            Реєстрація нового користувача
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <remarks>
            Sample request for registration new project:
            
                POST
                {
                    "login": "Nickname",
                    "password": "qwerty",
                    "passwordConfirm": "qwerty"
                }
            </remarks>>
            <response code="200">Якщо нового користувача було зареєстровано</response>
            <response code="400">Якщо нового користувача не було зареєстровано</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.AuthController.Login(Domain.DorZnakUA.Dto.User.LoginUserDto)">
             <summary>
             Запит на вхід в систему
             </summary>
             <param name="dto"></param>
             <returns></returns>
             <remarks>
            
             Sample login request:
             
                 POST
                 {
                     "login": "Nickname",
                     "password": "qwerty"
                 }
             </remarks>>
             <response code="200">Якщо нового користувача було зареєстровано</response>
             <response code="400">Якщо нового користувача не було зареєстровано</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.MetalRacksController">
            <summary>
            Сервіс для роботи зі стійками
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.GetAllMetalRacks">
            <summary>
            Отримання всіх стійок
            </summary>
            <remarks>
            Sample request to get a all metal racks:
            
                GET
                {
                }
            </remarks>>
            <response code="200">Якщо металеву стійки було знайдено</response>
            <response code="400">Якщо металеву стійки не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.GetMetalRack(System.Int64)">
            <summary>
            Отрмання стійки по ідентифікатору
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a metal rack by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо металеву стійку було знайдено по id</response>
            <response code="400">Якщо металеву стійку не було знайдено по id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.GetRoadSignMetalRack(System.Int64)">
            <summary>
            Тримання стійки знаку по його ідентифікатору
            </summary>
            <param name="roadSignId"></param>
            <remarks>
            Sample request to get a road sign metal rack by roadSignId:
            
                GET
                {
                    "roadSignId": "1"
                }
            </remarks>>
            <response code="200">Якщо металеву стійку знаку було знайдено по roadSignId</response>
            <response code="400">Якщо металеву стійку знаку не було знайдено по roadSignId</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.CreateMetalRack(Domain.DorZnakUA.Dto.MetalRack.CreateMetalRackDto)">
             <summary>
             Створення нової стійки
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to create new metal rack
            
                 POST
                 {
                     "name": "СКМ1.35",
                     "height": "3.5",
                     "weight": "9.6"
                     "diameter": "0.04"
                     "thickness": "0.003"
                 }
             </remarks>>
             <response code="200">Якщо металеву стійку було успішно створено</response>
             <response code="400">Якщо металеву стійку було не створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.DeleteMetalRack(System.Int64)">
            <summary>
            Видалення стійки за ідентифікатором
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a metal rack by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо металеву стійку було видалено</response>
            <response code="400">Якщо металеву стійку не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRacksController.UpdateMetalRack(Domain.DorZnakUA.Dto.MetalRack.UpdateMetalRackDto)">
            <summary>
            Оновлення стійки
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to update a metal rack:
            
                PUT
                {
                    "id": "1",
                    "name": "СКМ1.35",
                    "height": "3.5",
                    "weight": "9.6",
                    "diameter": "0.04",
                    "thickness": "0.003"
                }
            </remarks>>
            <response code="200">Якщо металеву стійку було оновлено</response>
            <response code="400">Якщо металеву стійку не було оновлено</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.ProjectsController">
            <summary>
            Сервіс для роботи з проєктами
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectsController.GetProject(System.Int64)">
            <summary>
            Отримання проєкта по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a project by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було знайдено по id</response>
            <response code="400">Якщо проєкт не було знайдено по id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectsController.GetUserProjects(System.Int64)">
            <summary>
            Отримання проєкта користувача за userId
            </summary>
            <param name="userId"></param>
            <remarks>
            Sample request:
            
                GET
                {
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було знайдено по userId</response>
            <response code="400">Якщо проєкт не було знайдено по userId</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectsController.DeleteProject(System.Int64)">
            <summary>
            Видалення проєкту по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a project by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було видалено по вказаному id</response>
            <response code="400">Якщо проєкт не було видалено по вказаному id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectsController.CreateProject(Domain.DorZnakUA.Dto.Project.CreateProjectDto)">
            <summary>
            Створення нового проєкта
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to create new project:
            
                POST
                {
                    "name": "Project #55",
                    "description": "Test project",
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт був створений</response>
            <response code="400">Якщо проєкт не був створений</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectsController.UpdateProject(Domain.DorZnakUA.Dto.Project.UpdateProjectDto)">
            <summary>
            Оновлення проєкту по id
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to update a project by id:
            
                PUT
                {
                    "id": "1",
                    "name": "Report #1",
                    "description": "Test report"
                }
            </remarks>
            <response code="200">Якщо проєкт було оновлено по id</response>
            <response code="400">Якщо проєкт не було оновлено по id</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.RoadSignsController">
            <summary>
            Сервіс для роботи з дорожніми знаками
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignsController.GetRoadSigns(System.Int64)">
            <summary>
            Отримання всіх дорожніх знаків проєкта по projectId 
            </summary>
            <param name="projectId"></param>
            <remarks>
            Sample request to get a roadSign by projectId:
            
                GET
                {
                    "projectId": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожні знаки було знайдено</response>
            <response code="400">Якщо дорожні знаки було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignsController.GetRoadSign(System.Int64)">
            <summary>
            Отримання дорожнього знаку по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a roadSign by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожній знак було знайдено</response>
            <response code="400">Якщо дорожній знак не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignsController.CreateRoadSign(Domain.DorZnakUA.Dto.RoadSign.CreateRoadSignDto)">
             <summary>
             Створення нового дорожнього знаку
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to create new roadSign:
            
                 POST
                 {
                     "positioning": "542+74",
                     "placementOnRoad": "Right",
                     "numberOfRacks": "2",
                     "projectId": "1" 
                 }
             </remarks>>
             <response code="200">Якщо новий дорожній знак було створено</response>
             <response code="400">Якщо новий дорожній знак не було створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignsController.DeleteRoadSign(System.Int64)">
            <summary>
            Видалення дорожнього знаку по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a roadSign by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожній знак було видалено</response>
            <response code="400">Якщо дорожній знак не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignsController.UpdateRoadSign(Domain.DorZnakUA.Dto.RoadSign.UpdateRoadSignDto)">
             <summary>
             Оновлення дорожнього знаку
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to update a roadSign by id:
            
                 PUT
                 {
                     "id": "1",
                     "positioning": "115+98",
                     "placementOnRoad": "Left",
                     "numberOfRacks": "2"
                 }
             </remarks>>
             <response code="200">Якщо дорожній знак було оновлено</response>
             <response code="400">Якщо дорожній знак не було оновлено</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.RolesController">
            <summary>
            Сервіс для роботи з ролями
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.CreateRole(Domain.DorZnakUA.Dto.Role.CreateRoleDto)">
            <summary>
            Створення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль було створено</response>
            <response code="400">Якщо роль не було створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.DeleteRole(System.Int64)">
            <summary>
            Видалення ролі по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо роль було видалено</response>
            <response code="400">Якщо роль не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.UpdateRole(Domain.DorZnakUA.Dto.Role.RoleDto)">
            <summary>
            Оновлення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "id": "1",
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль було оновлено</response>
            <response code="400">Якщо роль не було оновлено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.AddRoleForUser(Domain.DorZnakUA.Dto.UserRole.UserRoleDto)">
            <summary>
            Присвоєння ролі користувачу
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "login": "User #1",
                    "roleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.DeleteRoleForUser(Domain.DorZnakUA.Dto.UserRole.DeleteUserRoleDto)">
            <summary>
            Видалення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "login": "User #1",
                    "roleId": "2"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RolesController.UpdateRoleForUser(Domain.DorZnakUA.Dto.UserRole.UpdateUserRoleDto)">
            <summary>
            Оновлення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "login": "User #1",
                    "fromRoleId": "2"
                    "toRoleId": "1"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.ShieldsController">
            <summary>
            Сервіс для роботи з щитками дорожніх знаків
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.GetAllShields">
            <summary>
            
            </summary>
            <remarks>
            Sample request to get a all shields:
            
                GET
                {
                }
            </remarks>
            <response code="200">Якщо щиткі було успішно отримано</response>
            <response code="400">Якщо щиткі не було успішно отримано</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.GetShieldById(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a shield by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо щит за вказаним id було знайдено</response>
            <response code="400">Якщо щит за вказаним id не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.GetRoadSignShields(System.Int64)">
            <summary>
            
            </summary>
            <param name="roadSignId"></param>
            <remarks>
            Sample request to get a road sign shields by roadSignId:
            
                GET
                {
                    "roadSignId": "1"
                }
            </remarks>
            <response code="200">Якщо щиткі знаку за вказаним roadSignId було знайдено</response>
            <response code="400">Якщо щиткі знаку за вказаним roadSignId не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.CreateShield(Domain.DorZnakUA.Dto.Shield.CreateShieldDto)">
             <summary>
             
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to create new shield
            
                 POST
                 {
                     "group": "ProhibitionSigns",
                     "name": "3.21",
                     "shape": "Circle",
                     "sizeType": "I",
                     "height": "0.6",
                     "width": "0.6",
                     "weight": "6.2"
                 }
             </remarks>
             <response code="200">Якщо щит було успішно створено</response>
             <response code="400">Якщо щит не було успішно створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.DeleteShield(System.Int64)">
             <summary>
             
             </summary>
             <param name="id"></param>
             <remarks>
             Sample request to delete shield
            
                 POST
                 {
                     "id": "2"
                 }
             </remarks>
             <response code="200">Якщо щит було успішно видалено</response>
             <response code="400">Якщо щит не було успішно видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ShieldsController.UpdateShield(Domain.DorZnakUA.Dto.Shield.UpdateShieldDto)">
             <summary>
             
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to update shield
            
                 POST
                 {
                     "id": "2",
                     "group": "ProhibitionSigns",
                     "name": "3.21",
                     "shape": "Circle",
                     "sizeType": "I",
                     "height": "0.6",
                     "width": "0.6",
                     "weight": "6.2"
                 }
             </remarks>
             <response code="200">Якщо щит було успішно оновлено</response>
             <response code="400">Якщо щит не було успішно оновлено</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.TokensController">
            <summary>
            Сервіс для роботи з токінами
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.TokensController.RefreshToken(Domain.DorZnakUA.Dto.Token.TokenDto)">
            <summary>
            Запит на отримання RefreshToken
            </summary>
            <param name="dto"></param>
            <remarks>
            A sample request for a RefreshToken:
            
                POST
                {
                    "accessToken": "AccessToken",
                    "refreshToken": "RefreshToken",
                }
            </remarks>>
        </member>
        <member name="M:DorZnakUA.Api.Controller.WindZonesController.GetAllWindZones">
            <summary>
            Отримання всіх вітрових районів
            </summary>
            <remarks>
            Sample request to get a all wind zones:
            
                GET
                {
                }
            </remarks>>
            <response code="200">Якщо вітрові райони було знайдено</response>
            <response code="400">Якщо вітрові райони не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.WindZonesController.GetWindZoneById(System.Int64)">
            <summary>
            Отримання вітрового району по ідентифікатору
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a wind zone by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо вітровий район було знайдено по id</response>
            <response code="400">Якщо вітровий район не було знайдено по id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.WindZonesController.CreateWindZone(Domain.DorZnakUA.Dto.WindZone.CreateWindZoneDto)">
             <summary>
             Створення нового вітрового району
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to create new wind zone
            
                 POST
                 {
                     "name": "Test wind zone",
                     "description": "Description for wind zone"
                 }
             </remarks>>
             <response code="200">Якщо вітровий район було успішно створено</response>
             <response code="400">Якщо вітровий район було не створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.WindZonesController.DeleteWindZone(System.Int64)">
            <summary>
            Видалення вітрового району за ідентифікатором
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a wind zone by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо вітровий район було видалено</response>
            <response code="400">Якщо вітровий район не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.WindZonesController.UpdateWindZone(Domain.DorZnakUA.Dto.WindZone.UpdateWindZoneDto)">
            <summary>
            Оновлення вітрового району
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to update a wind zone:
            
                PUT
                {
                    "id": "1",
                    "name": "Update test wind zone",
                    "description": "Description for wind zone",
                }
            </remarks>>
            <response code="200">Якщо вітровий район було оновлено</response>
            <response code="400">Якщо вітровий район не було оновлено</response>
        </member>
        <member name="M:DorZnakUA.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Підключення Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DorZnakUA.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Підключення аутентифікації та авторизації
            </summary>
            <param name="services"></param>
            <param name="builder"></param>
        </member>
    </members>
</doc>
