<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DorZnakUA.Api</name>
    </assembly>
    <members>
        <member name="T:DorZnakUA.Api.Controller.AuthController">
            <summary>
            Сервіс для реєстрації та входу в систему
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.AuthController.Register(Domain.DorZnakUA.Dto.User.RegisterUserDto)">
            <summary>
            Реєстрація нового користувача
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <remarks>
            Sample request for registration new project:
            
                POST
                {
                    "login": "Nickname",
                    "password": "qwerty",
                    "passwordConfirm": "qwerty"
                }
            </remarks>>
            <response code="200">Якщо нового користувача було зареєстровано</response>
            <response code="400">Якщо нового користувача не було зареєстровано</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.AuthController.Login(Domain.DorZnakUA.Dto.User.LoginUserDto)">
             <summary>
             Запит на вхід в систему
             </summary>
             <param name="dto"></param>
             <returns></returns>
             <remarks>
            
             Sample login request:
             
                 POST
                 {
                     "login": "Nickname",
                     "password": "qwerty"
                 }
             </remarks>>
             <response code="200">Якщо нового користувача було зареєстровано</response>
             <response code="400">Якщо нового користувача не було зареєстровано</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.MetalRackController">
            <summary>
            Сервіс для роботи зі стійками
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRackController.GetAllMetalRacks">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRackController.GetMetalRack(System.Int64)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRackController.GetRoadSignMetalRack(System.Int64)">
            <summary>
            
            </summary>
            <param name="roadSignId"></param>
            <returns></returns>
        </member>
        <member name="M:DorZnakUA.Api.Controller.MetalRackController.CreateMetalRack(Domain.DorZnakUA.Dto.MetalRack.CreateMetalRackDto)">
            <summary>
            
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:DorZnakUA.Api.Controller.ProjectController">
            <summary>
            Сервіс для роботи з проєктами
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectController.GetProject(System.Int64)">
            <summary>
            Отримання проєкта по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a project by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було знайдено по id</response>
            <response code="400">Якщо проєкт не було знайдено по id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectController.GetUserProjects(System.Int64)">
            <summary>
            Отримання проєкта користувача за userId
            </summary>
            <param name="userId"></param>
            <remarks>
            Sample request:
            
                GET
                {
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було знайдено по userId</response>
            <response code="400">Якщо проєкт не було знайдено по userId</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectController.DeleteProject(System.Int64)">
            <summary>
            Видалення проєкту по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a project by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт було видалено по вказаному id</response>
            <response code="400">Якщо проєкт не було видалено по вказаному id</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectController.CreateProject(Domain.DorZnakUA.Dto.Project.CreateProjectDto)">
            <summary>
            Створення нового проєкта
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to create new project:
            
                POST
                {
                    "name": "Project #55",
                    "description": "Test project",
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо проєкт був створений</response>
            <response code="400">Якщо проєкт не був створений</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.ProjectController.UpdateProject(Domain.DorZnakUA.Dto.Project.UpdateProjectDto)">
            <summary>
            Оновлення проєкту по id
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request to update a project by id:
            
                PUT
                {
                    "id": "1",
                    "name": "Report #1",
                    "description": "Test report"
                }
            </remarks>
            <response code="200">Якщо проєкт було оновлено по id</response>
            <response code="400">Якщо проєкт не було оновлено по id</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.RoadSignController">
            <summary>
            Сервіс для роботи з дорожніми знаками
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignController.GetRoadSigns(System.Int64)">
            <summary>
            Отримання всіх дорожніх знаків проєкта по projectId 
            </summary>
            <param name="projectId"></param>
            <remarks>
            Sample request to get a roadSign by projectId:
            
                GET
                {
                    "projectId": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожні знаки було знайдено</response>
            <response code="400">Якщо дорожні знаки було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignController.GetRoadSign(System.Int64)">
            <summary>
            Отримання дорожнього знаку по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to get a roadSign by id:
            
                GET
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожній знак було знайдено</response>
            <response code="400">Якщо дорожній знак не було знайдено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignController.CreateRoadSign(Domain.DorZnakUA.Dto.RoadSign.CreateRoadSignDto)">
             <summary>
             Створення нового дорожнього знаку
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to create new roadSign:
            
                 POST
                 {
                     "positioning": "542+74",
                     "placementOnRoad": "Right",
                     "numberOfRacks": "2",
                     "projectId": "1" 
                 }
             </remarks>>
             <response code="200">Якщо новий дорожній знак було створено</response>
             <response code="400">Якщо новий дорожній знак не було створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignController.DeleteRoadSign(System.Int64)">
            <summary>
            Видалення дорожнього знаку по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request to delete a roadSign by id:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо дорожній знак було видалено</response>
            <response code="400">Якщо дорожній знак не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoadSignController.UpdateRoadSign(Domain.DorZnakUA.Dto.RoadSign.UpdateRoadSignDto)">
             <summary>
             Оновлення дорожнього знаку
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request to update a roadSign by id:
            
                 PUT
                 {
                     "id": "1",
                     "positioning": "115+98",
                     "placementOnRoad": "Left",
                     "numberOfRacks": "2"
                 }
             </remarks>>
             <response code="200">Якщо дорожній знак було оновлено</response>
             <response code="400">Якщо дорожній знак не було оновлено</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.RoleController">
            <summary>
            Сервіс для роботи з ролями
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.CreateRole(Domain.DorZnakUA.Dto.Role.CreateRoleDto)">
            <summary>
            Створення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль було створено</response>
            <response code="400">Якщо роль не було створено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.DeleteRole(System.Int64)">
            <summary>
            Видалення ролі по id
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "id": "1"
                }
            </remarks>>
            <response code="200">Якщо роль було видалено</response>
            <response code="400">Якщо роль не було видалено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.UpdateRole(Domain.DorZnakUA.Dto.Role.RoleDto)">
            <summary>
            Оновлення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "id": "1",
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль було оновлено</response>
            <response code="400">Якщо роль не було оновлено</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.AddRoleForUser(Domain.DorZnakUA.Dto.UserRole.UserRoleDto)">
            <summary>
            Присвоєння ролі користувачу
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "login": "User #1",
                    "roleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.DeleteRoleForUser(Domain.DorZnakUA.Dto.UserRole.DeleteUserRoleDto)">
            <summary>
            Видалення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "login": "User #1",
                    "roleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:DorZnakUA.Api.Controller.RoleController.UpdateRoleForUser(Domain.DorZnakUA.Dto.UserRole.UpdateUserRoleDto)">
            <summary>
            Оновлення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "login": "User #1",
                    "fromRoleName": "User"
                    "toRoleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="T:DorZnakUA.Api.Controller.TokenController">
            <summary>
            Сервіс для роботи з токінами
            </summary>
        </member>
        <member name="M:DorZnakUA.Api.Controller.TokenController.RefreshToken(Domain.DorZnakUA.Dto.Token.TokenDto)">
            <summary>
            Запит на отримання RefreshToken
            </summary>
            <param name="dto"></param>
            <remarks>
            A sample request for a RefreshToken:
            
                POST
                {
                    "accessToken": "AccessToken",
                    "refreshToken": "RefreshToken",
                }
            </remarks>>
        </member>
        <member name="M:DorZnakUA.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Підключення Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DorZnakUA.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Підключення аутентифікації та авторизації
            </summary>
            <param name="services"></param>
            <param name="builder"></param>
        </member>
    </members>
</doc>
